{"ast":null,"code":"import _createClass from \"/home/virginia/WebProg2019/Practice03/review/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/virginia/WebProg2019/Practice03/review/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/virginia/WebProg2019/Practice03/review/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/virginia/WebProg2019/Practice03/review/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _classCallCheck from \"/home/virginia/WebProg2019/Practice03/review/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/virginia/WebProg2019/Practice03/review/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n/**\n * Construct variable class\n */\n\nvar modelHTML = function modelHTML(label, name, val, unit) {\n  _classCallCheck(this, modelHTML);\n\n  this.label = label;\n  this.name = name;\n  this.val = val;\n  this.unit = unit;\n  this.plc = \"\".concat(val, \" \").concat(unit);\n};\n\nvar data = [];\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.saveModel = function () {\n      data.forEach(function (item) {\n        if (document.getElementById(item.name).value !== '') {\n          item.val = parseFloat(document.getElementById(item.name).value);\n        }\n      });\n      var models = JSON.parse(localStorage.getItem('models2D'));\n      var model = {};\n\n      if (models.length == 0) {\n        model.id = 1;\n      } else {\n        model.id = models[models.length - 1].id + 1;\n      }\n\n      data.forEach(function (item) {\n        model[item.name] = item.val;\n      });\n      models.push(model);\n      localStorage.setItem('models2D', JSON.stringify(models));\n\n      _this.fetchModels();\n    };\n\n    _this.deleteModel = function (id) {\n      var models = JSON.parse(localStorage.getItem('models2D'));\n\n      for (var i = 0; i < models.length; i++) {\n        if (models[i].id == id) {\n          models.splice(i, 1);\n          break;\n        }\n      }\n\n      localStorage.setItem('models2D', JSON.stringify(models));\n    };\n\n    _this.deleteAll = function () {\n      var models = [];\n      localStorage.setItem('models2D', JSON.stringify(models));\n    };\n\n    _this.fetchModels = function () {\n      var models = JSON.parse(localStorage.getItem('models2D'));\n      var myModels = document.getElementById('myModels');\n\n      if (models == null) {\n        var _models = [];\n        localStorage.setItem('models2D', JSON.stringify(_models));\n      } else {\n        models.forEach(function (model) {\n          // Render detail of this model\n          var info = '';\n          data.forEach(function (item) {\n            info += \"\\n          \".concat(item.label, \": \").concat(model[item.name], \" \").concat(item.unit, \"<br>\");\n          });\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/virginia/WebProg2019/Practice03/review/src/App.js"],"names":["React","Component","modelHTML","label","name","val","unit","plc","data","App","saveModel","forEach","item","document","getElementById","value","parseFloat","models","JSON","parse","localStorage","getItem","model","length","id","push","setItem","stringify","fetchModels","deleteModel","i","splice","deleteAll","myModels","info"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n/**\n * Construct variable class\n */\nclass modelHTML {\n  constructor(label, name, val, unit) {\n    this.label = label;\n    this.name  = name;\n    this.val   = val;\n    this.unit  = unit;\n    this.plc   = `${val} ${unit}`;\n  }\n}\n\n\n\nconst data = [];\nclass App extends Component {\n  /**\n * Declare Variables\n */\n\n/**\n * Add model data to local storage\n */\nsaveModel = () => {\n\n  data.forEach((item) => {\n    if (document.getElementById(item.name).value !== '') {\n      item.val = parseFloat(document.getElementById(item.name).value);\n    }\n  });\n\n  let models = JSON.parse(localStorage.getItem('models2D'));\n  let model = {};\n\n  if (models.length == 0) {\n    model.id = 1;\n  } else {\n    model.id = models[models.length - 1].id + 1;\n  }\n\n  data.forEach((item) => {\n    model[item.name] = item.val;\n  });\n\n  models.push(model);\n  localStorage.setItem('models2D', JSON.stringify(models));\n\n  this.fetchModels();\n}\n\n\n/**\n * Delete model with id of id\n * @param {number} id - id of model to delete\n */\ndeleteModel = (id) => {\n  let models = JSON.parse(localStorage.getItem('models2D'));\n\n  for (let i = 0; i < models.length; i++) {\n    if (models[i].id == id) {\n      models.splice(i, 1);\n      break;\n    }\n  }\n  localStorage.setItem('models2D', JSON.stringify(models));\n\n}\n\n\n/**\n * Delete all models\n */\ndeleteAll = () => {\n  let models = [];\n  localStorage.setItem('models2D', JSON.stringify(models));\n\n}\n\n\n/**\n * Fetch all models in local storage\n */\nfetchModels = () => {\n  let models = JSON.parse(localStorage.getItem('models2D'));\n  const myModels = document.getElementById('myModels');\n\n  if (models == null) {\n    let models = [];\n    localStorage.setItem('models2D', JSON.stringify(models));\n\n  } else {\n    models.forEach((model) => {\n      // Render detail of this model\n      let info = '';\n\n      data.forEach((item) => {\n        info += `\n          ${item.label}: ${model[item.name]} ${item.unit}<br>`;\n      });\n\n    });\n  }\n}\n\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}